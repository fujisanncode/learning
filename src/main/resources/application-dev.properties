#服务器端口配置============================================================================================
server.port=8081
spring.application.name=dev-8081
server.servlet.context-path=/vue

#=========================================================================================================
#数据库配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://rm-8vb3cjii29zna4uyz0o.mysql.zhangbei.rds.aliyuncs.com:3306/test_data_s?useUnicode=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
#spring.datasource.username=${spring.datasource.username}
#spring.datasource.password=${spring.datasource.password}
#spring.datasource.name=data1

#=========================================================================================================
#指定数据源名，多个数据源
#端点暴露
management.endpoints.web.exposure.include=*

#========================================================================================================
#classpath: class路径下 config-location 指定mybatis配置文件的路径，配置文件中指定mapper的路径
#mybatis.config-location=classpath*:mybatis-mapper/*.xml
mybatis.mapper-locations=classpath*:mybatis-mapper/*.xml

#=======================================================================================================
#分页
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true

#========================================================================================================
#ftp 配置ftp服务的变量
ftp.host=192.168.3.4
ftp.port=21
#192.168.3.4的登录密码 访问192.168.3.4需要其密码
#ftp.username=${ftp.username}
#ftp.password=${ftp.password}
ftp.filepath=/
#通过http方式 访问ftp文件服务器
ftp.web.host=192.168.3.4
ftp.web.port=8090
#设置上传下载文件大小  单文件大小 总文件大小
spring.servlet.multipart.max-file-size=5000MB
spring.servlet.multipart.max-request-size=5000MB

#=======================================================================================================
#设置国际化文件目录 classpath的相对路径(多个文件用分号分割) 默认文件必须配置(找不到语言则读取默认文件)
spring.messages.basename=i18n/message
#spring.profiles.active=dev

#======================================================================================================
#JPA配置
#选择数据库
spring.jpa.database=mysql
#打印sql
spring.jpa.show-sql=true
#启动jpa后，如果检测到实体改变，对表结构更新，不删除表中数据
spring.jpa.hibernate.ddl-auto=update
#实体类映射数据库命名测率
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
#使用自定义配置
spring.jpa.properties.hibernate.dialect=com.example.sqllearning.configure.mysql.mysqlConfig
#懒加载配置
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#批量写入数据库
spring.jpa.properties.hibernate.jdbc.batch_size=500
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=false
spring.jpa.properties.hibernate.order_inserts=false
spring.jpa.properties.hibernate.order_updates=false

#=======================================================================================================
#smb/cifs访问共享文件夹配置
#smb.uri=smb://192.168.3.1/Seagate-0BC278QJ_usb1_3/photo-temp
smb.uri=smb://192.168.3.1/USB-13FE0002_usb1_4/photo-temp/
smb.ip=192.168.3.1
#smb.name=${smb.name}
#smb.password=${smb.password}

#========================================================================================================
#rabbitmq服务器配置
spring.rabbitmq.host=39.101.206.66
#后台端口5672，页面端口15672
spring.rabbitmq.port=5672
#spring.rabbitmq.username=${spring.rabbitmq.username}
#spring.rabbitmq.password=${spring.rabbitmq.password}
#禁止应用启动时开启自动监听，需要配置否则Starting ProtocolHandler ["http-nio-8081"] 不能走到，即不能启动
spring.rabbitmq.listener.direct.auto-startup=false
spring.rabbitmq.listener.simple.auto-startup=false

#阿里云服务器redis=======================================================================================
local.redis.host=39.101.206.66
local.redis.port=6379
#local.redis.pass=${xxx:${local.redis.pass}}
#local.redis.name=${xxx:${local.redis.name}}
spring.redis.timeout=30s
#netty server配置=======================================================================================
netty.server.host=192.168.3.3
#netty.server.host=127.0.0.1
netty.server.port=9000